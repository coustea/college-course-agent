<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ccut.mapper.StudentGroupMapper">


    <insert id="insert" useGeneratedKeys="true" keyProperty="groupId" keyColumn="group_id">
        INSERT INTO student_groups
        (group_name,group_leader_id,teacher_id,
         created_at,status,approval_status)
        values (#{groupName},#{groupLeaderId},#{teacherId},
         CURRENT_TIMESTAMP,#{status},#{approvalStatus})
    </insert>
    <update id="update" parameterType="com.ccut.entity.StudentGroup">
        UPDATE student_groups
        <set>
        <if test="courseId != null">
            course_id = #{courseId},
        </if>
        <if test="groupName != null and groupName != ''">
            group_name = #{groupName},
        </if>
        <if test="groupLeaderId != null">
            group_leader_id = #{groupLeaderId},
        </if>
        <if test="teacherId != null">
            teacher_id = #{teacherId},
        </if>
        <if test="groupDescription != null and groupDescription != ''">
            group_description = #{groupDescription},
        </if>
        <if test="status != null">
            status = #{status},
        </if>
        <if test="approvalStatus != null">
            approval_status = #{approvalStatus},
        </if>
        updated_at = CURRENT_TIMESTAMP
        </set>
        WHERE group_id = #{groupId}
    </update>

    <resultMap id="studentGroupRM" type="com.ccut.entity.StudentGroup">
        <id property="groupId" column="group_id" />
        <result property="courseId" column="course_id" />
        <result property="groupName" column="group_name" />
        <result property="groupLeaderId" column="group_leader_id" />
        <result property="teacherId" column="teacher_id" />
        <result property="groupDescription" column="group_description" />
        <result property="createdAt" column="created_at" />
        <result property="updatedAt" column="updated_at" />
        <result property="status" column="status" />
        <result property="approvalStatus" column="approval_status" />
        <collection property="groupMemberList" ofType="com.ccut.entity.GroupMember">
            <id property="id" column="id" />
            <result property="courseId" column="course_id" />
            <result property="groupId" column="group_id" />
            <result property="studentId" column="student_id" />
            <result property="studentName" column="student_name" />
            <result property="joinTime" column="join_time" />
            <result property="role" column="role" />
            <result property="joinStatus" column="join_status" />
        </collection>
    </resultMap>

   
    <select id="selectByApprovalStatus" resultMap="studentGroupRM">
        SELECT
            sg.group_id, sg.course_id, sg.group_name, sg.group_leader_id, sg.teacher_id,
            sg.group_description, sg.created_at, sg.updated_at, sg.status, sg.approval_status,
            gm.id, gm.group_id, gm.course_id, gm.student_id, gm.student_name,
            gm.join_time, gm.role, gm.join_status
        FROM student_groups as sg
                 JOIN group_members as gm on sg.group_id = gm.group_id
        <where>
            <if test="approvalStatus != null">
                sg.approval_status = #{approvalStatus}
            </if>
        </where>
    </select>

    <select id="selectAll" resultMap="studentGroupRM">
        SELECT
            sg.group_id, sg.course_id, sg.group_name, sg.group_leader_id, sg.teacher_id,
            sg.group_description, sg.created_at, sg.updated_at, sg.status, sg.approval_status,
            gm.id, gm.group_id, gm.course_id, gm.student_id, gm.student_name,
            gm.join_time, gm.role, gm.join_status
        FROM student_groups as sg
                 JOIN group_members as gm on sg.group_id = gm.group_id
    </select>

    <select id="selectByGroupId" resultMap="studentGroupRM">
        SELECT
            sg.group_id, sg.course_id, sg.group_name, sg.group_leader_id, sg.teacher_id,
            sg.group_description, sg.created_at, sg.updated_at, sg.status, sg.approval_status,
            gm.id, gm.group_id, gm.course_id, gm.student_id, gm.student_name,
            gm.join_time, gm.role, gm.join_status
        FROM student_groups as sg
                 JOIN group_members as gm on sg.group_id = gm.group_id
        WHERE sg.group_id = #{groupId}
    </select>
    <select id="selectByCourseIdAndTeacherId" resultType="com.ccut.entity.StudentGroup" >
        SELECT * FROM student_groups WHERE course_id = #{courseId} AND teacher_id = #{teacherId}
    </select>

    <delete id="deleteById">
        DELETE FROM student_groups WHERE group_id = #{id}
    </delete>

</mapper>